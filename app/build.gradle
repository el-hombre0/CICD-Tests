/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id("io.qameta.allure") version "2.12.0"

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    implementation 'io.rest-assured:rest-assured:5.5.0'
    implementation 'junit:junit:4.13.2'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.36'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-junit5
    testImplementation group: 'io.qameta.allure', name: 'allure-junit5', version: '2.28.1'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-commandline
    testImplementation group: 'io.qameta.allure', name: 'allure-commandline', version: '2.28.0', ext: 'pom'
    testImplementation group: 'io.qameta.allure', name: 'allure-assertj', version: '2.28.1'
    testImplementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.28.1'

    // https://mvnrepository.com/artifact/io.qameta.allure/allure-java-commons
    testImplementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.28.1'

    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    runtimeOnly group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.22'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'dz4_.App'
}
// sourceSets {
//     test {
//         java {
//             srcDirs = ["test/java/dz4_"]  
//         }
//     }
// }
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
// test {
//     useJUnitPlatform()
// }